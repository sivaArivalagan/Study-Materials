Rest API - Client and Server interaction
--------

Set of Standards to create API:
-------------------------------
1. SOAP - SOAP Webservices -> used by Legacy Systems -> So many conditions and Tightly Auth which is demerit
2. Rest - most common - Posses Rules -> Light weight protocol ->Easy to build and maintain ->fliexible Coding -> Facebook,
Google, Instagram uses REST -> Testing is very very necessary

API -> Hit the endpoint and get a response.

Terminologies in REST
=====================

End point: 
----------
Address where API is hosted on the Server. This is the place where your API resides. Also called as Base URI where exactly the server is located.

HTTP methods which are commonly used to communicate with Rest API’s are
-----------------------------------------------------------------------
1. GET, 
2. POST, 
3. PUT, 
4. DELETE

1. GET
------
The GET method is used to extract information from the given server using a given URI. 
While using GET request, it should only extract data and should have no other effect on the data. 
No Payload/Body required
How to send input data in GET?
Ans: Using Query Parameters

2. POST
-------
A POST request is used to send data to the server, for example, customer information, file upload, etc. using HTML forms.
How to send input data in POST?
Ans: Using Form Parameters /Body Payload

3. PUT
------
Replaces all current representations of the target resource with the uploaded content.

Example: we created on reservation using POST API, there after you want to update your Reservation like Last name, Phno, In that case
Annamalai Hotel should provide 1 more API to Hotels.com and that API should be like update Reservation.

4. DELETE
---------
Removes all current representations of the target resource given by a URI.

WE CALL THEM as CRUD Operation
------------------------------
1. C - Create using POST Operation
2. R - Read using GET Operation
3. U - Update using PUT Operation
4. D - Delete using DELETE Operation

Resources:
----------
Resources represent API/Collection which can be accessed from the Server

Google.com/maps
google.com/search
google.com/images

in above, the base URL is google.com
and the resources is maps, search and images

Few more details which are optional, but its all about how the API is designed. If the API is expecting
parameters, then you should also set parameters as a part of Request

There are 2 types of Paramters, they are

1. Path Paramaters,
2. Query Parameters

1. Path Parameters:
-------------------
Path parameters are variable parts of a URL path. 
They are typically used to point to a specific resource within a collection, 
such as a user identified by ID
eg:
                  Collections  image with this ID
                         |      |
https://www.google.com/Images/1123343
https://www.google.com/docs/1123343
https://amazon.com/orders/112
                      |    |
				Resource  Path Parameter
				


Query Parameters:
-----------------
Query Parameter is used to sort/filter the resources.
Query Parameters are identified with 
1. ?
2. ?condtions1&condition2

1. ? - example:
https://amazon.com/orders?sort_by=2/20/2020

2. ?condtions1&condition2 - example:
https://www.google.com/search?q=newyork&oq=newyork&aqs=chrome..69i57j0l7.2501j0j7&sourceid=chrome&ie=UTF-8

ALL THE FROM END RESULTS ARE GENERATED BY THE API RESPONSE WHICH WAS RECIEVED.

Headers/Cookies:
----------------
Headers represent the meta-data associated with the API request and response. 
In layman terms, we were sending Additional details to API to process our request.
Example : Authorization details ( Username and password or login cookies) => we can send in xml, json, txt html => what kind
of format our request been sent --- ContentType = xml

--------------------------------------------------
End Point Request URL can be constructed as below
Base URL/resource/(Query/Path)Parameters
--------------------------------------------------